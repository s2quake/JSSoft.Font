<!--===================================================================================================================
MIT License

Copyright (c) 2020 Jeesu Choi

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
====================================================================================================================-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:nmfc="clr-namespace:Ntreev.ModernUI.Framework.Controls;assembly=Ntreev.ModernUI.Framework"
                    xmlns:jsfc="clr-namespace:JSSoft.Font.ApplicationHost.Controls">

    <ControlTemplate x:Key="ValueSelector_ComboBox_Template" TargetType="{x:Type ComboBox}">
        <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="4" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                    <Border BorderBrush="#0F000000" BorderThickness="1" Background="#0C000000" CornerRadius="2.5" Margin="-1" />
                    <Border BorderBrush="#0C000000" BorderThickness="1" Background="#0A000000" CornerRadius="2.75" Margin="-2" />
                    <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource WindowBorderActive}" BorderThickness="1" Background="{DynamicResource PopupBackground}" Margin="0,-1,0,0">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
            <ToggleButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Padding="0,0,0,10" Focusable="False" />
            <Path x:Name="Arrow" Grid.ColumnSpan="2" Data="{DynamicResource DownArrowGeometry}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="3,1,8,0" VerticalAlignment="Center" />
            <nmfc:NumericTextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Padding="2,0,0,1" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                <nmfc:NumericTextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="AllowDrop" Value="True" />
                        <Setter Property="MinWidth" Value="0" />
                        <Setter Property="MinHeight" Value="0" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </nmfc:NumericTextBox.Style>
            </nmfc:NumericTextBox>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="False">
                <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" />
                <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
            </Trigger>
            <Trigger Property="IsFocused" SourceName="PART_EditableTextBox" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ValueSelector_Template" TargetType="{x:Type jsfc:ValueSelector}">
        <ComboBox x:Name="PART_EditableComboBox" ItemsSource="{TemplateBinding Values}"
                  Text="{TemplateBinding Text}" IsEditable="True" 
                  Template="{StaticResource ValueSelector_ComboBox_Template}" />
    </ControlTemplate>

    <Style TargetType="{x:Type jsfc:ValueSelector}">
        <Setter Property="Template" Value="{StaticResource ValueSelector_Template}" />
        <Setter Property="Focusable" Value="False" />
    </Style>
    
</ResourceDictionary>